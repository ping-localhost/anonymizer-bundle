language: php

sudo: false

cache:
    directories:
        - $HOME/.composer/cache/files

apt:
  update: true

env:
    global:
        - PHPUNIT_FLAGS="-v"

matrix:
    fast_finish: true
    include:
          # Minimum supported dependencies with the latest and oldest PHP version
        - php: 7.2
          env: COMPOSER_FLAGS="--prefer-stable --prefer-lowest" SYMFONY_DEPRECATIONS_HELPER="weak_vendors"
        - php: 7.3
          env: COMPOSER_FLAGS="--prefer-stable --prefer-lowest" SYMFONY_DEPRECATIONS_HELPER="weak_vendors"

          # Test LTS versions
        - php: 7.2
          env: DEPENDENCIES="symfony/lts:^3"
        - php: 7.2
          env: DEPENDENCIES="symfony/lts:^4"

          # Latest commit to master
        - php: 7.2
          env: STABILITY="dev"
        - php: 7.3
          env: STABILITY="dev"

          # Generate test coverage
        - php: 7.2
          env: COVERAGE=true PHPUNIT_FLAGS="-v --coverage-clover=coverage.xml"

          # Test the latest stable release
        - php: 7.2
        - php: 7.3

    allow_failures:
          # Dev-master is allowed to fail.
        - env: STABILITY="dev"

          # PHPCS-tool is not yet ready for PHP7.3
        - php: 7.3

before_install:
    - if [[ $COVERAGE != true ]]; then phpenv config-rm xdebug.ini || true; fi
    - if ! [ -z "$STABILITY" ]; then composer config minimum-stability ${STABILITY}; fi;
    - if ! [ -v "$DEPENDENCIES" ]; then composer require --no-update ${DEPENDENCIES}; fi;

install:
    - composer update ${COMPOSER_FLAGS} --prefer-dist --no-interaction
    - yarn install

script:
    # Run all CI commands
    - composer ci
    # Run PHPUnit
    - ./vendor/bin/phpunit $PHPUNIT_FLAGS
    # Upload code coverage if we generated any
    - if [[ $COVERAGE = true ]]; then bash <(curl -s https://codecov.io/bash); fi
